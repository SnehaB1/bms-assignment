{"version":3,"sources":["images/bookmyshow.webp","actions/assignment-1.js","constants/store.js","assignment-1/containers/index.js","actions/assignment-2.js","assignment-2/components/index.js","assignment-2/containers/index.js","App.js","constants/paths.js","actions/api.js","routes/index.js","reducers/appReducer.js","reducers/index.js","reducers/assignment-1.js","reducers/assignment-2.js","reducers/activeTrailer.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","updateList","list","type","payload","Assignment1","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","init","numberList","tempArray","keys","map","key","push","setState","arrayList","hasErrors","fieldsError","some","field","updateArrayList","_this$state","state","duplicateValues","uniqueValues","item","deleteValueFromArray","addValueToArray","appendValuesBetweenRange","array","range","splitRange","split","a","parseInt","b","i","value","index","indexOf","splice","sort","handleSubmit","e","preventDefault","Array","prototype","diff","filter","form","validateFields","err","values","splittedValues","inputNumber","isNaN","includes","j","length","val","_this$state2","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","inputNumberError","isFieldTouched","react_default","createElement","row","col","className","align","span","offset","card","es_form","layout","onSubmit","Item","validateStatus","help","rules","required","message","input","prefix","icon","style","color","placeholder","es_button","htmlType","disabled","join","React","Component","AssignmentForm1","Form","create","name","connect","assignment1","dispatch","updateActiveTrailerData","data","PlaySVG","xmlns","width","height","viewBox","fill","d","LikeSVG","CalendarSVG","MaybeSVG","DislikeSVG","TrailerColumn","trailerCode","trailerVisible","hideTrailer","addStyle","activeTrailer","activeIndex","activeElement","myInput","createRef","sendValueToParent","window","addEventListener","bind","handleClick","getNumberOfItems","current","offsetTop","result","onClickTrailer","_this2","_this$props","apiData","showTrailer","_apiData$item","DispReleaseDate","wtsCount","wtsPerc","EventTitle","activeEventTitle","activeTrailerURL","activeEventLanguage","activeEventGenre","activeShowDate","activeWtsPerc","activeWtsCount","activeDwtsCount","activeMaybeCount","Fragment","undefined","onClick","border","src","title","component","concat","ref","alt","moment","Date","format","toLocaleString","navigator","language","minimumFractionDigits","Assignment2","itemsPerRow","offsetTopArray","rowAbove","windowWidth","innerWidth","onChangeWidth","initialiseArray","findMinRow","minOffsetTop","element","countOccurence","TrailerURL","EventLanguage","EventGenre","ShowDate","dwtsCount","maybeCount","Math","floor","substring","components","assignment2","App","getTrailersData","storeApiData","response","require","history","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","proxyurl","method","headers","Content-type","sent","json","abrupt","t0","console","log","stop","_x","apply","arguments","BasicRoutes","react_router_dom","basename","process","react_router","exact","path","PureComponent","appReducer","action","restProps","objectWithoutProperties","objectSpread","rootReducer","combineReducers","app","persistConfig","storage","whitelist","persistedReducer","persistReducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","storeInfo","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","es","integration_react","loading","routes","document","getElementById","URL","href","origin","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d1a2f9a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bookmyshow.44a177ec.webp\";","import { UPDATELIST } from \"../constants/store\";\n\nexport const updateList = (list) => ({\n    type: UPDATELIST,\n    payload: list\n  });","export const UPDATELIST = \"UPDATELIST\";\n\nexport const STOREAPIDATA = \"STOREAPIDATA\";\n\nexport const UPDATEACTIVETRAILER = \"UPDATEACTIVETRAILER\";\n","import { Button, Card, Col, Form, Icon, Input, Row } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateList } from \"../../actions/assignment-1\";\nimport \"../style.css\";\n\nclass Assignment1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrayList: [],\n      duplicateValues: [],\n      uniqueValues: []\n    }\n  }\n\n  componentDidMount() {\n    this.init();\n    // console.log(arrayList, tempArray)\n\n  }\n\n  init = () => {\n    const { numberList } = this.props;\n    const tempArray = [];\n\n    Object.keys(numberList).map(function (key) {\n      return tempArray.push(numberList[key]);\n    });\n\n    this.setState({ arrayList: tempArray });\n  }\n\n  hasErrors = (fieldsError) => {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n  }\n\n  updateArrayList = () => {\n    const { arrayList, duplicateValues, uniqueValues } = this.state;\n\n    duplicateValues.map((item) => {\n      return this.deleteValueFromArray(arrayList, item)\n    })\n\n    uniqueValues.map((item) => {\n      return this.addValueToArray(arrayList, item)\n    })\n\n  }\n\n  appendValuesBetweenRange = (array, range) => {\n    const splitRange = range.split(\"-\");\n    const a = parseInt(splitRange[0]);\n    const b = parseInt(splitRange[1]);\n\n    if (b >= a) {\n      let i = a;\n      for (i = a; i <= b; ++i) {\n        array.push(parseInt(i));\n      }\n    }\n\n    return array;\n  }\n\n  deleteValueFromArray = (array, value) => {\n    let index = array.indexOf(value);\n\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n\n    return array.sort(function (a, b) { return a - b });\n  }\n\n  addValueToArray = (array, value) => {\n    array.push(value);\n\n    return array.sort(function (a, b) { return a - b });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { updateList } = this.props;\n    const { arrayList } = this.state;\n\n    Array.prototype.diff = function (a) {\n      return this.filter(function (i) { return a.indexOf(i) < 0; });\n    };\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        // split values\n        const splittedValues = values.inputNumber.split(\",\");\n\n        splittedValues.map((item) => {\n\n          //remove if not a number\n          if (isNaN(item)) {\n            this.deleteValueFromArray(splittedValues, item);\n          }\n\n          //code for range\n          if (item.includes(\"-\")) {\n            this.appendValuesBetweenRange(splittedValues, item);\n            this.deleteValueFromArray(splittedValues, item);\n            // return true\n          }\n          return true;\n        });\n\n        // string to number type change\n        for (let j = 0; j < splittedValues.length; j++) {\n          splittedValues[j] = +splittedValues[j];\n        }\n\n        // duplicate Value\n        let duplicateValues = splittedValues.filter(val => arrayList.includes(val));\n        \n        // unique values\n        let uniqueValues = splittedValues.diff(duplicateValues);\n        \n        this.setState({\n          duplicateValues,\n          uniqueValues\n        });\n\n        // add unique values to array\n        uniqueValues.map((item) => {\n          return this.addValueToArray(arrayList, item)\n        })\n\n        // update redux store\n        updateList(arrayList);\n\n      }\n\n    });\n  };\n\n  render() {\n    const { arrayList, duplicateValues, uniqueValues } = this.state;\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\n    // Only show error after a field is touched.\n    const inputNumberError = isFieldTouched('inputNumber') && getFieldError('inputNumber');\n\n    return (\n      <div>\n        <Row>\n          <Col>\n            <h2 className=\"heading\">Assignment #1</h2>\n          </Col>\n        </Row>\n        <Row align=\"middle\" className=\"form-container\">\n          <Col span={12} offset={6} >\n            <Card className=\"card-container\">\n              <Form layout=\"inline\" onSubmit={this.handleSubmit} className=\"form\">\n                <Form.Item validateStatus={inputNumberError ? 'error' : ''} help={inputNumberError || 'E.g. 67, 78, 98-103'}>\n                  {getFieldDecorator('inputNumber', {\n                    rules: [{ required: true, message: 'Please input numbers!' }],\n                  })(\n                    <Input\n                      prefix={<Icon type=\"number\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      placeholder=\"Input Numbers\"\n\n                    />,\n                  )}\n                </Form.Item>\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\" disabled={this.hasErrors(getFieldsError())}>\n                    GO\n                    <Icon type=\"right\" />\n                  </Button>\n                </Form.Item>\n              </Form>\n\n              <Row className=\"result\">\n                <Col>\n                  {\n                    duplicateValues.length > 0 &&\n                    <p>\n                      <b style={{ color: \"#ff0000\" }}>Duplicate Values: </b>\n                      {duplicateValues.join(\", \")}\n                    </p>\n                  }\n                  {\n                    uniqueValues.length > 0 &&\n                    <p>\n                      <b style={{ color: \"#4BB543\" }}>Unique Values(added to list): </b>\n                      {uniqueValues.join(\", \")}\n                    </p>\n                  }\n                  <p>\n                    <b style={{ color: \"#1890ff\" }}>Current List: </b>\n                    {arrayList.join(\", \")}\n                  </p>\n                </Col>\n              </Row>\n\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { assignment1 } = state;\n  // console.log(state);\n  return {\n    numberList: assignment1\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateList: (list) => dispatch(updateList(list))\n  };\n};\n\nconst AssignmentForm1 = Form.create({ name: 'assgn1' })(Assignment1);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignmentForm1);","import { STOREAPIDATA, UPDATEACTIVETRAILER } from \"../constants/store\";\n\nexport const storeApiData = (list) => ({\n  type: STOREAPIDATA,\n  payload: list\n});\n\nexport const updateActiveTrailerData = (data) => ({\n  type: UPDATEACTIVETRAILER,\n  payload: data\n})","import { Col, Icon, Row } from \"antd\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../style.css\";\n\nconst PlaySVG = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\">\n    <path fill=\"#fff\" d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-3 17v-10l9 5.146-9 4.854z\" />\n  </svg>\n);\n\nconst LikeSVG = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 48 48\">\n    <path d=\"M 23 3 C 22.449219 3 22 3.449219 22 4 L 22 11.75 L 18 22 L 18 43 C 18.414063 44.164063 19.695313 45 21 45 L 40 45 C 42.207031 45 44 43.207031 44 41 C 44 40.175781 43.738281 39.417969 43.3125 38.78125 C 44.871094 38.234375 46 36.742188 46 35 C 46 34.019531 45.648438 33.132813 45.0625 32.4375 C 46.222656 31.738281 47 30.453125 47 29 C 47 28.019531 46.648438 27.132813 46.0625 26.4375 C 47.222656 25.738281 48 24.453125 48 23 C 48 20.792969 46.207031 19 44 19 L 29.375 19 C 29.984375 17.070313 31 13.617188 31 12 C 31 8.234375 28.242188 3 25.53125 3 Z M 3 19 C 2.714844 19 2.441406 19.128906 2.25 19.34375 C 2.058594 19.558594 1.964844 19.839844 2 20.125 L 5 44.125 C 5.0625 44.625 5.496094 45 6 45 L 15 45 C 15.550781 45 16 44.554688 16 44 L 16 20 C 16 19.449219 15.550781 19 15 19 Z M 11.5 38 C 12.328125 38 13 38.671875 13 39.5 C 13 40.328125 12.328125 41 11.5 41 C 10.671875 41 10 40.328125 10 39.5 C 10 38.671875 10.671875 38 11.5 38 Z \"></path>\n  </svg>\n)\n\nconst CalendarSVG = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 64 64\">\n    <path d=\"M 16 5 C 14.344 5 13 6.344 13 8 L 13 11 L 8 11 C 6.344 11 5 12.344 5 14 L 5 56 C 5 57.656 6.344 59 8 59 L 56 59 C 57.656 59 59 57.656 59 56 L 59 14 C 59 12.344 57.656 11 56 11 L 51 11 L 51 8 C 51 6.344 49.656 5 48 5 C 46.344 5 45 6.344 45 8 L 45 11 L 35 11 L 35 8 C 35 6.344 33.656 5 32 5 C 30.344 5 29 6.344 29 8 L 29 11 L 19 11 L 19 8 C 19 6.344 17.656 5 16 5 z M 16 7 C 16.551 7 17 7.449 17 8 L 17 16 C 17 16.551 16.551 17 16 17 C 15.449 17 15 16.551 15 16 L 15 8 C 15 7.449 15.449 7 16 7 z M 32 7 C 32.551 7 33 7.449 33 8 L 33 16 C 33 16.551 32.551 17 32 17 C 31.449 17 31 16.551 31 16 L 31 8 C 31 7.449 31.449 7 32 7 z M 48 7 C 48.551 7 49 7.449 49 8 L 49 16 C 49 16.551 48.551 17 48 17 C 47.449 17 47 16.551 47 16 L 47 8 C 47 7.449 47.449 7 48 7 z M 8 13 L 13 13 L 13 16 C 13 17.656 14.344 19 16 19 C 17.656 19 19 17.656 19 16 L 19 13 L 29 13 L 29 16 C 29 17.656 30.344 19 32 19 C 33.656 19 35 17.656 35 16 L 35 13 L 45 13 L 45 16 C 45 17.656 46.344 19 48 19 C 49.656 19 51 17.656 51 16 L 51 13 L 56 13 C 56.551 13 57 13.449 57 14 L 57 21 C 56.449 21 56 21.449 56 22 L 56 24 C 56 24.551 56.449 25 57 25 L 57 56 C 57 56.551 56.551 57 56 57 L 8 57 C 7.449 57 7 56.551 7 56 L 7 25 C 7.551 25 8 24.551 8 24 L 8 22 C 8 21.449 7.551 21 7 21 L 7 14 C 7 13.449 7.449 13 8 13 z M 12 21 C 11.449 21 11 21.449 11 22 L 11 24 C 11 24.551 11.449 25 12 25 C 12.551 25 13 24.551 13 24 L 13 22 C 13 21.449 12.551 21 12 21 z M 17 21 C 16.449 21 16 21.449 16 22 L 16 24 C 16 24.551 16.449 25 17 25 C 17.551 25 18 24.551 18 24 L 18 22 C 18 21.449 17.551 21 17 21 z M 22 21 C 21.449 21 21 21.449 21 22 L 21 24 C 21 24.551 21.449 25 22 25 C 22.551 25 23 24.551 23 24 L 23 22 C 23 21.449 22.551 21 22 21 z M 27 21 C 26.449 21 26 21.449 26 22 L 26 24 C 26 24.551 26.449 25 27 25 C 27.551 25 28 24.551 28 24 L 28 22 C 28 21.449 27.551 21 27 21 z M 32 21 C 31.449 21 31 21.449 31 22 L 31 24 C 31 24.551 31.449 25 32 25 C 32.551 25 33 24.551 33 24 L 33 22 C 33 21.449 32.551 21 32 21 z M 37 21 C 36.449 21 36 21.449 36 22 L 36 24 C 36 24.551 36.449 25 37 25 C 37.551 25 38 24.551 38 24 L 38 22 C 38 21.449 37.551 21 37 21 z M 42 21 C 41.449 21 41 21.449 41 22 L 41 24 C 41 24.551 41.449 25 42 25 C 42.551 25 43 24.551 43 24 L 43 22 C 43 21.449 42.551 21 42 21 z M 47 21 C 46.449 21 46 21.449 46 22 L 46 24 C 46 24.551 46.449 25 47 25 C 47.551 25 48 24.551 48 24 L 48 22 C 48 21.449 47.551 21 47 21 z M 52 21 C 51.449 21 51 21.449 51 22 L 51 24 C 51 24.551 51.449 25 52 25 C 52.551 25 53 24.551 53 24 L 53 22 C 53 21.449 52.551 21 52 21 z M 14 28 C 13.448 28 13 28.448 13 29 L 13 47 C 13 47.552 13.448 48 14 48 L 50 48 C 50.552 48 51 47.552 51 47 L 51 29 C 51 28.448 50.552 28 50 28 L 14 28 z M 15 30 L 22 30 L 22 37 L 15 37 L 15 30 z M 24 30 L 31 30 L 31 37 L 24 37 L 24 30 z M 33 30 L 40 30 L 40 37 L 33 37 L 33 30 z M 42 30 L 49 30 L 49 37 L 42 37 L 42 30 z M 15 39 L 22 39 L 22 46 L 15 46 L 15 39 z M 24 39 L 31 39 L 31 46 L 24 46 L 24 39 z M 33 39 L 40 39 L 40 46 L 33 46 L 33 39 z M 42 39 L 49 39 L 49 46 L 42 46 L 42 39 z M 10 51 C 9.449 51 9 51.449 9 52 C 9 52.551 9.449 53 10 53 L 54 53 C 54.551 53 55 52.551 55 52 C 55 51.449 54.551 51 54 51 L 10 51 z\"></path>\n  </svg>\n);\n\nconst MaybeSVG = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\">\n    <path d=\"M 12.298828 2.0078125 C 9.2536504 1.8592539 6.6687031 3.9932031 6.1113281 6.8457031 C 5.9933281 7.4477031 6.4914687 8 7.1054688 8 C 7.5894687 8 7.9859375 7.6497813 8.0859375 7.1757812 C 8.5179375 5.1197812 10.534922 3.6391719 12.794922 4.0761719 C 14.716922 4.4481719 16.103141 6.2667031 15.994141 8.2207031 C 15.908141 9.7697031 14.910672 10.751859 13.763672 11.880859 C 12.712672 12.915859 11.548484 14.061281 11.146484 15.738281 C 10.992484 16.377281 11.460188 17 12.117188 17 C 12.594188 17 12.981703 16.657359 13.095703 16.193359 C 13.373703 15.069359 14.217016 14.238687 15.166016 13.304688 C 16.490016 12.001688 17.99 10.525391 18 8.0253906 C 18.011 5.2883906 16.274906 2.9158438 13.628906 2.2148438 C 13.179656 2.0958438 12.733854 2.0290352 12.298828 2.0078125 z M 11.5 20 C 11.224 20 11 20.224 11 20.5 L 11 21.5 C 11 21.776 11.224 22 11.5 22 L 12.5 22 C 12.776 22 13 21.776 13 21.5 L 13 20.5 C 13 20.224 12.776 20 12.5 20 L 11.5 20 z\"></path>\n  </svg>\n)\n\nconst DislikeSVG = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\">\n    <path d=\"M 2 2 C 1.448 2 1 2.448 1 3 L 1 13 C 1 13.552 1.448 14 2 14 L 4 14 C 4.552 14 5 13.552 5 13 L 5 3 C 5 2.448 4.552 2 4 2 L 2 2 z M 9 2 C 7.895 2 7 2.895 7 4 L 7 13.992188 C 7 14.522187 7.2099844 15.029297 7.5839844 15.404297 L 13.113281 20.945312 C 13.696281 21.529312 14.640516 21.533078 15.228516 20.955078 C 15.595516 20.594078 15.752578 20.068453 15.642578 19.564453 L 14.648438 15 L 21 15 C 22.105 15 23 14.105 23 13 L 23 11.001953 C 23 10.730953 22.944891 10.461891 22.837891 10.212891 L 19.830078 3.2109375 C 19.515078 2.4759375 18.791188 2 17.992188 2 L 9 2 z\"></path>\n  </svg>\n)\n\nclass TrailerColumn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trailerCode: \"\",\n      trailerVisible: false,\n      hideTrailer: false,\n      addStyle: this.props.index === this.props.activeTrailer.activeIndex ? true : false,\n      activeElement: {}\n    }\n    this.myInput = React.createRef()\n  }\n\n  componentDidMount() {\n    this.sendValueToParent();\n    window.addEventListener(\"resize\", this.sendValueToParent.bind(this));\n  }\n\n  sendValueToParent() {\n    const { index } = this.props;\n    const { trailerVisible } = this.state;\n\n    if (trailerVisible) this.handleClick();\n    if (index < 10)\n      this.props.getNumberOfItems(index, this.myInput.current.offsetTop);\n  }\n\n  handleClick() {\n    this.setState({ trailerVisible: true });\n    const result = this.props.onClickTrailer(this.props.index, this.props.item);\n    this.setState({ activeElement: result });\n  }\n\n  render() {\n    const { apiData, item, showTrailer, activeTrailer, hideTrailer } = this.props;\n\n    const { DispReleaseDate, wtsCount, wtsPerc, EventTitle } = apiData[item];\n    // const { activeEventTitle } = activeElement;\n    const {\n      activeEventTitle, activeTrailerURL,\n      activeEventLanguage, activeEventGenre, activeShowDate,\n      activeWtsPerc, activeWtsCount, activeDwtsCount,\n      activeMaybeCount, activeIndex\n    } = activeTrailer;\n\n    return (\n      <React.Fragment>\n        {\n          showTrailer && activeIndex !== undefined\n            ?\n            <div className=\"trailer-row\">\n              <div className=\"close\" onClick={() => hideTrailer()}>\n                <Icon type=\"close\" className=\"icon-close\" />\n              </div>\n              <div\n                className=\"iframe-col\"\n              >\n                <iframe\n                  width={\"100%\"}\n                  height={\"100%\"}\n                  style={{ border: \"1px solid #000\" }}\n                  src={activeTrailerURL}\n                  title={activeEventTitle}>\n                </iframe>\n              </div>\n              <div className={\"trailer-info\"}>\n                <div className=\"trailer-title\">\n                  {activeEventTitle}\n                </div>\n                <div className=\"trailer-language\">\n                  {activeEventLanguage}\n                </div>\n                <div className={\"genre-wrapper\"}>\n                  {\n                    activeEventGenre && activeEventGenre.split(\"|\").map((item, i) =>\n                      <div className={\"genre-item\"} key={i}>\n                        {item}\n                      </div>\n                    )\n                  }\n                </div>\n\n                <Row>\n                  <Col span={12} >\n                    <Row type={\"flex\"}>\n                      <Col>\n                        <Icon component={LikeSVG} className=\"trailer-info-like\" />\n                      </Col>\n                      <Col>\n                        <Row className=\"trailer-info-percentage\">{activeWtsPerc}%</Row>\n                        <Row className=\"trailer-info-wtscount\">{activeWtsCount} votes</Row>\n                      </Col>\n                    </Row>\n                  </Col>\n                  <Col span={12}>\n                    <Row type={\"flex\"}>\n                      <Col>\n                        <Icon component={CalendarSVG} className=\"trailer-info-calendar\" />\n                      </Col>\n                      <Col>\n                        <Row className=\"trailer-info-percentage\">{activeShowDate && activeShowDate.split(\",\")[0]}</Row>\n                        <Row className=\"trailer-info-wtscount\">{activeShowDate && activeShowDate.split(\",\")[1]}</Row>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n                <Row className=\"stats\">\n                  <Col span={8} className=\"info-will-watch\">\n                    <Row>\n                      <Icon component={LikeSVG} className=\"stats-like\" />\n                    </Row>\n                    <Row className=\"will-watch-text\">\n                      Will Watch\n                    </Row>\n                    <Row className=\"will-watch-count\">\n                      ({activeWtsCount})\n                    </Row>\n                  </Col>\n                  <Col span={8} className=\"info-maybe-watch\">\n                    <Row>\n                      <Icon component={MaybeSVG} className=\"stats-maybe\" />\n                    </Row>\n                    <Row className=\"maybe-watch-text\">\n                      Maybe\n                    </Row>\n                    <Row className=\"maybe-watch-count\">\n                      ({activeMaybeCount})\n                    </Row>\n                  </Col>\n                  <Col span={8} className=\"info-not-watch\">\n                    <Row>\n                      <Icon component={DislikeSVG} className=\"stats-dislike\" />\n                    </Row>\n                    <Row className=\"not-watch-text\">\n                      Won't Watch\n                    </Row>\n                    <Row className=\"not-watch-count\">\n                      ({activeDwtsCount})\n                    </Row>\n                  </Col>\n                </Row>\n              </div>\n            </div>\n            :\n            null\n        }\n        <div className={`trailer-thumbmail ${(this.props.index === activeIndex) ? \"selectedItem\" : null}`}\n          ref={this.myInput}\n          onClick={() => this.handleClick()}\n        >\n          <div className={\"trailers-container\"}>\n            <div className=\"image-wrapper\">\n              <img\n                src={`https://in.bmscdn.com/events/moviecard/${item}.jpg`}\n                alt={\"Bookmyshow Trailers\"}\n                className={\"trailers-image\"}\n              />\n              <div className=\"trailer-date\">\n                <div className=\"date\">{moment(new Date(DispReleaseDate)).format(\"DD\")}</div>\n                <div className=\"month\">{moment(new Date(DispReleaseDate)).format(\"MMM\")}</div>\n              </div>\n              <div className=\"trailer-play\">\n                <Icon component={PlaySVG} className=\"play-button\" />\n              </div>\n              <div className=\"trailer-like\">\n                <Icon component={LikeSVG} className=\"like\" />{wtsPerc}%\n                  <p className=\"votes\">\n                  {wtsCount.toLocaleString(navigator.language, { minimumFractionDigits: 0 })} votes\n                   </p>\n              </div>\n            </div>\n\n          </div>\n          <div className={\"trailer-name\"}>{EventTitle}</div>\n        </div>\n      </React.Fragment>\n\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { activeTrailer } = state;\n\n  return {\n    activeTrailer\n  }\n}\n\nexport default connect(mapStateToProps)(TrailerColumn);","import { Button, Row } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateActiveTrailerData } from \"../../actions/assignment-2\";\nimport TrailerColumn from \"../components\";\nimport \"../style.css\";\n\nclass Assignment2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemsPerRow: 0,\n      offsetTopArray: [],\n      rowAbove: undefined,\n      windowWidth: window.innerWidth\n    }\n  }\n\n  componentDidMount() {\n    this.onChangeWidth();\n    window.addEventListener(\"resize\", this.initialiseArray.bind(this));\n    updateActiveTrailerData({});\n  }\n\n  initialiseArray() {\n    this.setState({ offsetTopArray: [] });\n  }\n\n  onChangeWidth() {\n    const { windowWidth } = this.state;\n    // change configuration according to screen size\n    if (windowWidth !== window.innerWidth) {\n      this.findMinRow();\n    }\n    this.setState({ windowWidth: window.innerWidth });\n  }\n\n  getNumberOfItems(key, offsetTop) {\n    const { offsetTopArray } = this.state;\n\n    offsetTopArray.push(offsetTop);\n    if (key > 8) {\n      this.findMinRow()\n    }\n    return true;\n  }\n\n  countOccurence() {\n    const { offsetTopArray } = this.state;\n\n    let i = 0;\n    let minOffsetTop = offsetTopArray[0];\n\n    offsetTopArray.map((element) => {\n      if (element === minOffsetTop)\n        return i++;\n      else return i\n    })\n    return i;\n  }\n\n  findMinRow() {\n    let val = this.countOccurence();\n\n    this.setState({ itemsPerRow: val })\n  }\n\n  onClickTrailer(index, item) {\n    const { apiData, updateActiveTrailerData } = this.props;\n    const { itemsPerRow } = this.state;\n    const {\n      EventTitle, TrailerURL, EventLanguage,\n      EventGenre, ShowDate, wtsPerc, wtsCount,\n      dwtsCount, maybeCount\n    } = apiData[item];\n\n    // row above trailer is clicked\n    let rowAbove = Math.floor((parseInt(index)) / parseInt(itemsPerRow))\n    this.setState({ rowAbove });\n\n    let activeIndex = TrailerURL.indexOf(\"v=\");\n\n    const trailerData = {\n      activeEventTitle: EventTitle,\n      activeTrailerURL: `https://www.youtube.com/embed/${TrailerURL.substring(activeIndex + 2, activeIndex + 13)}?autoplay=1&mute=1&enablejsapi=1`,\n      activeEventLanguage: EventLanguage,\n      activeEventGenre: EventGenre,\n      activeShowDate: ShowDate,\n      activeWtsPerc: wtsPerc,\n      activeWtsCount: wtsCount,\n      activeDwtsCount: dwtsCount,\n      activeMaybeCount: maybeCount,\n      activeIndex: index\n    }\n\n    // redux store update\n    updateActiveTrailerData(trailerData);\n  }\n\n  hideTrailer() {\n    const { updateActiveTrailerData } = this.props\n\n    // empty redux store\n    const trailerData = {\n      activeEventTitle: undefined,\n      activeTrailerURL: undefined,\n      activeEventLanguage: undefined,\n      activeEventGenre: undefined,\n      activeShowDate: undefined,\n      activeWtsPerc: undefined,\n      activeWtsCount: undefined,\n      activeDwtsCount: undefined,\n      activeMaybeCount: undefined,\n      activeIndex: undefined\n    }\n    updateActiveTrailerData(trailerData);\n    // updateActiveTrailerData({});\n  }\n\n  render() {\n    const { apiData } = this.props;\n    const { itemsPerRow, rowAbove } = this.state;\n    // console.log(itemsPerRow)\n\n    return (\n      <div>\n        <Row className=\"heading-row\">\n          <p className=\"two-heading\">Movie Trailers</p>\n          <Button className=\"coming-soon-button\">Coming Soon</Button>\n        </Row>\n\n        <div className=\"trailer-wrapper\" style={{}}>\n          {\n            Object.keys(apiData).map((item, index) =>\n              <TrailerColumn\n                apiData={apiData}\n                item={item}\n                key={index}\n                index={index}\n                getNumberOfItems={(key, offsetTop) => this.getNumberOfItems(key, offsetTop)}\n                onClickTrailer={(index, item) => this.onClickTrailer(index, item)}\n                hideTrailer={() => this.hideTrailer()}\n                showTrailer={index === itemsPerRow * rowAbove}\n              />\n            )}\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { assignment2 } = state;\n  // console.log(state);\n  return {\n    apiData: assignment2\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateActiveTrailerData: (data) => dispatch(updateActiveTrailerData(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Assignment2);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { assignment1, assignment2 } from './constants';\nimport './App.css';\nimport { updateList } from './actions/assignment-1';\nimport { getTrailersData } from './actions/api';\nimport { storeApiData } from \"./actions/assignment-2\";\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    const { updateList, getTrailersData, storeApiData } = this.props;\n    updateList([101, 102, 103, 104, 105, 106, 107, 108, 109, 110]);\n\n    const response = await getTrailersData();\n    if (response) {\n      storeApiData(response[1]);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={require(\"./images/bookmyshow.webp\")} className=\"App-logo\" alt=\"logo\" />\n          <h2>Assignment</h2>\n          <div>\n            <button className={\"select-button\"} onClick={() => this.props.history.push(assignment1)}>Assignment #1</button>\n            <button className={\"select-button\"} onClick={() => this.props.history.push(assignment2)}>Assignment #2</button>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateList: (list) => dispatch(updateList(list)),\n    getTrailersData: () => dispatch(getTrailersData()),\n    storeApiData: (data) => dispatch(storeApiData(data))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","export const rootPath = \"/\";\nexport const assignment1 = \"/assignment1/\";\nexport const assignment2 = \"/assignment2/\";","import { trailersApi, proxyurl } from \"../constants\";\n\n\nexport const getTrailersData = () =>\n  async (dispatch) => {\n    try {\n      const response = await fetch(proxyurl+ trailersApi, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"text/plain\"\n        }\n      })\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.log(\"api-error\", error);\n      return false;\n    }\n  };\n","import React from \"react\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\n\nimport { rootPath, assignment1, assignment2 } from \"../constants\";\n\nimport Assignment1 from \"../assignment-1/containers\";\nimport Assignment2 from \"../assignment-2/containers\";\nimport App from \"../App\";\n\nclass BasicRoutes extends React.PureComponent {\n    render() {\n\n        return (\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Route exact path={rootPath} component={App} />\n                <Route path={assignment1} component={Assignment1} />\n                <Route path={assignment2} component={Assignment2} />\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default BasicRoutes;","// import { STORE_USER } from \"../constants/redux\";\n\nconst appReducer = (state = null, action) => {\n  const { type, ...restProps } = action;\n  \n  switch (type) {\n    case \"STORE_USER\":\n      state = {\n        ...state,\n        ...restProps\n      };\n      break;\n    default: {\n        state = {\n            ...state\n        }\n    }\n  }\n  return state;\n};\n\nexport default appReducer;","import { combineReducers } from \"redux\";\nimport appReducer from \"./appReducer\";\nimport { updateList } from \"./assignment-1\";\nimport { storeApiData } from \"./assignment-2\";\nimport { updateActiveTrailer } from \"./activeTrailer\";\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  assignment1: updateList,\n  assignment2: storeApiData,\n  activeTrailer: updateActiveTrailer\n});\n\nexport default rootReducer;\n","import { UPDATELIST } from \"../constants/store\";\n\n\nexport const updateList = (state = {}, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case UPDATELIST:\n      return {\n        ...state,\n        ...payload\n      };\n    default:\n      return state;\n  }\n};\n\n","import { STOREAPIDATA } from \"../constants/store\";\n\n\nexport const storeApiData = (state = {}, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case STOREAPIDATA:\n      return {\n        ...state,\n        ...payload\n      };\n    default:\n      return state;\n  }\n};\n\n","import { UPDATEACTIVETRAILER } from \"../constants/store\";\n\n\nexport const updateActiveTrailer = (state = {}, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case UPDATEACTIVETRAILER:\n      return {\n        ...state,\n        ...payload\n      };\n    default:\n      return state;\n  }\n};\n\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"../reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"app\", \"assignment1\", \"assignment2\", \"activeTrailer\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {BrowserRouter} from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\n\nimport BasicRoutes from \"./routes\";\nimport store from \"./store/configureStore\";\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst storeInfo = store();\n\nconst InitializeApp = () => {\n    return (\n      <Provider store={storeInfo.store}>\n        <PersistGate loading={null} persistor={storeInfo.persistor}>\n          <BasicRoutes />\n        </PersistGate>\n      </Provider>\n    );\n  };\n\nReactDOM.render(InitializeApp(), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}